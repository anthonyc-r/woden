| islandOuterRadius islandInnerRadius maximumHeight seabedLevel heightScale islandBaseLevel snowStartHeight textureData |
islandOuterRadius := 100.0.
islandInnerRadius := islandOuterRadius - 50.0.
maximumHeight := 100.0.
seabedLevel := -3.0.
islandBaseLevel := 1.0.
heightScale := 120.0.

snowStartHeight := 15.0.

textureData := WDCTextureData extent: 256@256 terrainMap: (self at: #texture) renderWith: [ :s :t |
	| st p r theta innerRadius
	 boundaries heightAttenuation
	 islandInterior mountainHeight
	 sand rock grass snow notInSnow
	 heightValue|
	"Compute the coordinates"
	st := s@t.
	p := (st*2.0 - 1.0) * islandOuterRadius.

	r := p distanceTo: 0@0.
	theta := p theta.

	"Generate the island boundaries"
	innerRadius := islandOuterRadius - 20.0 - (((theta*1.5 + 12.0) turbulence)*35.0) min: islandOuterRadius.
	sand := r smoothStepFrom: innerRadius to: islandOuterRadius.
	boundaries := (r smoothStepFrom: innerRadius to: islandOuterRadius ) fuzzyNot.
	heightAttenuation := (r smoothStepFrom: 0.0 to: innerRadius) fuzzyNot.

	"Generate the mountains"
	mountainHeight := (st*10.0 fractionalBrownianMotionOctaves: 5 lacunarity: 2.167245 initialAmplitude: 1.0 with: [:c | c signedGradientNoise abs ])*0.5 + 0.5 * (maximumHeight * heightAttenuation).
	"Generate the stuff in the island interior"
	islandInterior := islandBaseLevel + mountainHeight.

	heightValue := seabedLevel interpolateTo: islandInterior at: boundaries.

	snow := heightValue smoothStepFrom: snowStartHeight to: snowStartHeight + 5.0.
	notInSnow := snow fuzzyNot.
	grass := ((((st*10.0) turbulence - ((heightValue max: 0.0)/maximumHeight*1.0) + 0.1 max: 0.0) productFuzzyAnd: sand fuzzyNot)* 10.0 * notInSnow).
	rock := (snow fuzzyNot productFuzzyAnd: sand fuzzyNot) productFuzzyAnd: grass fuzzyNot.

	{heightValue / heightScale . {sand . grass . rock . snow . 0.0}}.
]
